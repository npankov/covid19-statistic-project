{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Charts/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/Charts/Chart.module.css","components/CountryPicker/CountryPicker.module.css","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","CardContent","Typography","color","gutterBottom","variant","start","end","value","separator","Date","toLocaleString","url","getData","country","a","dynamicUrl","axios","get","getDailyData","newData","map","el","total","date","reportDate","getCountries","countries","name","Chart","useState","dailyData","setDailyData","useEffect","receiveDailyData","lineChart","length","labels","datasets","label","borderColor","fill","options","title","display","position","text","barChart","backgroundColor","legend","CountryPicker","handleCountryChange","setCountries","receivedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","FormHelperText","App","props","handleCountrychange","receivedData","setState","state","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3e112815.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"confirmed\":\"Cards_confirmed__iMMyf\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from 'react';\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\nimport styles from './Cards.module.css';\n\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n  if (!confirmed) {\n    return 'Loading...';\n  }\n  return (\n    <div className={styles.container}>\n      <Grid container spacing={3} justify=\"center\">\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.confirmed)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>Confirmés</Typography>\n            <Typography variant=\"h5\" component=\"h2\">\n              <CountUp\n                start={0}\n                end={confirmed.value}\n                separator=\" \"\n              />\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\" gutterBottom>Nombre de cas actifs de COVID-19</Typography>\n            <Typography color=\"textSecondary\">Dernière mise à jour: {new Date(lastUpdate).toLocaleString()}</Typography>\n          </CardContent>\n        </Grid>\n\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>Guérisons</Typography>\n            <Typography variant=\"h5\" component=\"h2\">\n              <CountUp\n                start={0}\n                end={recovered.value}\n                separator=\" \"\n              />\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\" gutterBottom>Nombre de cas guéri de COVID-19</Typography>\n            <Typography color=\"textSecondary\">Dernière mise à jour: {new Date(lastUpdate).toLocaleString()}</Typography>\n          </CardContent>\n        </Grid>\n\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>Décès</Typography>\n            <Typography variant=\"h5\" component=\"h2\">\n              <CountUp\n                start={0}\n                end={deaths.value}\n                separator=\" \"\n              />\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\" gutterBottom>Nombre de décès de COVID-19</Typography>\n            <Typography color=\"textSecondary\">Dernière mise à jour: {new Date(lastUpdate).toLocaleString()}</Typography>\n          </CardContent>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Cards;\n","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const getData = async (country) => {\n  let dynamicUrl = url;\n  if (country) {\n    dynamicUrl = `${url}/countries/${country}`;\n  }\n  try {\n    const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(dynamicUrl);\n    return { confirmed, recovered, deaths, lastUpdate };\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const getDailyData = async () => {\n  try {\n    const { data } = await axios.get(`${url}/daily`);\n    const newData = data.map((el) => ({\n      confirmed: el.confirmed.total,\n      deaths: el.deaths.total,\n      date: el.reportDate,\n    }));\n    return newData;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const getCountries = async () => {\n  try {\n    const { data: { countries } } = await axios.get(`${url}/countries`);\n    return countries.map((country) => country.name);\n  } catch (error) {\n    return error;\n  }\n};\n\n","import React, { useState, useEffect } from 'react';\nimport { Line, Bar } from 'react-chartjs-2';\nimport { getDailyData } from '../../api';\nimport styles from './Chart.module.css';\n\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n  const [dailyData, setDailyData] = useState([]);\n\n  useEffect(() => {\n    const receiveDailyData = async () => {\n      setDailyData(await getDailyData());\n    };\n\n    receiveDailyData();\n  }, []);\n\n  const lineChart = (\n    dailyData.length\n      ? (\n        <Line\n          data={{\n            labels: dailyData.map(({ date }) => date),\n            datasets: [{\n              data: dailyData.map(({ confirmed }) => confirmed),\n              label: 'Confirmés',\n              borderColor: '#ff0000',\n              fill: true,\n            },\n            {\n              data: dailyData.map(({ deaths }) => deaths),\n              label: 'Décès',\n              borderColor: '#574432',\n              fill: true,\n            }],\n          }}\n          options={{\n            title: { display: true, position: 'bottom', text: 'Le graphique de tous les cas dans le monde' },\n          }}\n        />\n      ) : null\n  );\n\n  const barChart = (\n    confirmed\n      ? (\n        <Bar\n          data={{\n            labels: ['Infecté', 'Guéri', 'Décès'],\n            datasets: [{\n              data: [confirmed.value, recovered.value, deaths.value],\n              label: 'Hommes',\n              backgroundColor: ['#ff0000', '#9f53e7', '#574432'],\n            }],\n          }}\n          options={{\n            legend: { display: false },\n            title: { display: true, text: `Le graphique de tous les cas de pays: ${country}` },\n          }}\n        />\n      ) : null\n  );\n\n  return (\n    <div className={styles.container}>\n      {country ? barChart : lineChart}\n    </div>\n  );\n};\n\nexport default Chart;\n","import React, { useState, useEffect } from 'react';\nimport { FormControl, FormHelperText, NativeSelect } from '@material-ui/core';\nimport { getCountries } from '../../api';\nimport styles from './CountryPicker.module.css';\n\nconst CountryPicker = ({ handleCountryChange }) => {\n  const [countries, setCountries] = useState([]);\n\n  useEffect(() => {\n    const receivedCountries = async () => {\n      setCountries(await getCountries());\n    };\n\n    receivedCountries();\n  }, []);\n\n  return (\n    <FormControl className={styles.formControl}>\n      <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\n        <option value=\"\">Monde entier</option>\n        {countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\n      </NativeSelect>\n      <FormHelperText>Lieu</FormHelperText>\n    </FormControl>\n  );\n};\n\nexport default CountryPicker;\n","import React from 'react';\nimport { Cards, Chart, CountryPicker } from './components';\nimport styles from './App.module.css';\nimport { getData, getCountries } from './api';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {},\n      country: '',\n    };\n  }\n\n  async componentDidMount() {\n    const receivedData = await getData();\n    this.setState({ data: receivedData });\n  }\n\n  handleCountrychange = async (country) => {\n    const receivedData = await getData(country);\n    this.setState({ data: receivedData, country });\n  }\n\n  render() {\n    const { data, country } = this.state;\n    return (\n      <div className={styles.container}>\n        <Cards data={data} />\n        <CountryPicker handleCountryChange={this.handleCountrychange}/>\n        <Chart data={data} country={country}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__yjZZH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"App_body__ZTvxg\",\"container\":\"App_container__1MQN3\"};"],"sourceRoot":""}