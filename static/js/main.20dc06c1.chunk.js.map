{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Card.jsx","components/Cards/Cards.jsx","api/index.js","components/Charts/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/Charts/Chart.module.css","components/CountryPicker/CountryPicker.module.css","App.module.css"],"names":["module","exports","CardExample","className","cardTitle","value","cardDiscription","lastUpdate","Grid","item","component","Card","xs","md","cx","styles","card","CardContent","Typography","color","gutterBottom","variant","start","end","separator","Date","toLocaleString","Cards","data","confirmed","recovered","deaths","container","spacing","justify","url","getData","country","a","dynamicUrl","axios","get","getDailyData","newData","map","el","total","date","reportDate","getCountries","countries","name","Chart","useState","dailyData","setDailyData","useEffect","receiveDailyData","lineChart","length","labels","datasets","label","borderColor","fill","options","title","display","position","text","barChart","backgroundColor","legend","BootstrapInput","withStyles","theme","root","marginTop","input","borderRadius","palette","background","paper","border","fontSize","padding","transition","transitions","create","fontFamily","join","boxShadow","InputBase","CountryPicker","handleCountryChange","setCountries","allCountries","receivedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","FormHelperText","App","props","handleCountrychange","receivedData","setState","state","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.20dc06c1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"confirmed\":\"Cards_confirmed__iMMyf\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from 'react';\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\nimport styles from './Cards.module.css';\n\nconst CardExample = ({ className, cardTitle, value, cardDiscription, lastUpdate }) => (\n  <Grid item component={Card} xs={12} md={3} className={cx(styles.card, className)}>\n    <CardContent>\n      <Typography color=\"textSecondary\" gutterBottom>{cardTitle}</Typography>\n      <Typography variant=\"h5\" component=\"h2\">\n        <CountUp\n          start={0}\n          end={value}\n          separator=\" \"\n        />\n      </Typography>\n      <Typography variant=\"body2\" component=\"p\" gutterBottom>{cardDiscription}</Typography>\n      <Typography color=\"textSecondary\">Dernière mise à jour: {new Date(lastUpdate).toLocaleString()}</Typography>\n    </CardContent>\n  </Grid>\n);\n\nexport default CardExample;\n","import React from 'react';\nimport { Grid } from '@material-ui/core';\nimport CardExample from './Card';\nimport styles from './Cards.module.css';\n\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n  if (!confirmed) {\n    return 'Loading...';\n  }\n\n  return (\n    <div className={styles.container}>\n      <Grid container spacing={3} justify=\"center\">\n\n        <CardExample\n          className={styles.confirmed}\n          cardTitle=\"Confirmés\"\n          value={confirmed.value}\n          cardDiscription=\"Nombre de cas actifs de COVID-19\"\n          lastUpdate={lastUpdate}\n        />\n\n        <CardExample\n          className={styles.recovered}\n          cardTitle=\"Guérisons\"\n          value={recovered.value}\n          cardDiscription=\"Nombre de cas guéri de COVID-19\"\n          lastUpdate={lastUpdate}\n        />\n\n        <CardExample\n          className={styles.deaths}\n          cardTitle=\"Décès\"\n          value={deaths.value}\n          cardDiscription=\"Nombre de décès de COVID-19\"\n          lastUpdate={lastUpdate}\n        />\n\n      </Grid>\n    </div>\n  );\n};\n\nexport default Cards;\n","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const getData = async (country) => {\n  let dynamicUrl = url;\n  if (country) {\n    dynamicUrl = `${url}/countries/${country}`;\n  }\n  try {\n    const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(dynamicUrl);\n    return { confirmed, recovered, deaths, lastUpdate };\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const getDailyData = async () => {\n  try {\n    const { data } = await axios.get(`${url}/daily`);\n    const newData = data.map((el) => ({\n      confirmed: el.confirmed.total,\n      deaths: el.deaths.total,\n      date: el.reportDate,\n    }));\n    return newData;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const getCountries = async () => {\n  try {\n    const { data: { countries } } = await axios.get(`${url}/countries`);\n    return countries.map((country) => country.name);\n  } catch (error) {\n    return error;\n  }\n};\n\n","import React, { useState, useEffect } from 'react';\nimport { Line, Bar } from 'react-chartjs-2';\nimport { getDailyData } from '../../api';\nimport styles from './Chart.module.css';\n\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n  const [dailyData, setDailyData] = useState([]);\n\n  useEffect(() => {\n    const receiveDailyData = async () => {\n      setDailyData(await getDailyData());\n    };\n\n    receiveDailyData();\n  }, []);\n\n  const lineChart = (\n    dailyData.length\n      ? (\n        <Line\n          data={{\n            labels: dailyData.map(({ date }) => date),\n            datasets: [{\n              data: dailyData.map(({ confirmed }) => confirmed),\n              label: 'Confirmés',\n              borderColor: '#ff0000',\n              fill: true,\n            },\n            {\n              data: dailyData.map(({ deaths }) => deaths),\n              label: 'Décès',\n              borderColor: '#574432',\n              fill: true,\n            }],\n          }}\n          options={{\n            title: { display: true, position: 'bottom', text: 'Le graphique de tous les cas dans le monde' },\n          }}\n        />\n      ) : null\n  );\n\n  const barChart = (\n    confirmed\n      ? (\n        <Bar\n          data={{\n            labels: ['Infecté', 'Guéri', 'Décès'],\n            datasets: [{\n              data: [confirmed.value, recovered.value, deaths.value],\n              label: 'Hommes',\n              backgroundColor: ['#ff0000', '#9f53e7', '#574432'],\n            }],\n          }}\n          options={{\n            legend: { display: false },\n            title: { display: true, text: `Le graphique de tous les cas de pays: ${country}` },\n          }}\n        />\n      ) : null\n  );\n\n  return (\n    <div className={styles.container}>\n      {country ? barChart : lineChart}\n    </div>\n  );\n};\n\nexport default Chart;\n","import React, { useState, useEffect } from 'react';\nimport { FormControl, FormHelperText, NativeSelect, InputBase } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport { getCountries } from '../../api';\nimport styles from './CountryPicker.module.css';\n\nconst BootstrapInput = withStyles((theme) => ({\n  root: {\n    'label + &': {\n      marginTop: theme.spacing(3),\n    },\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    padding: '10px 26px 10px 12px',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n    '&:focus': {\n      borderRadius: 4,\n      borderColor: '#80bdff',\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n    },\n  },\n}))(InputBase);\n\nconst CountryPicker = ({ handleCountryChange }) => {\n  const [countries, setCountries] = useState([]);\n\n  useEffect(() => {\n    const receivedCountries = async () => {\n      const allCountries = await getCountries();\n      setCountries(allCountries);\n    };\n\n    receivedCountries();\n  }, []);\n\n  return (\n    <FormControl className={styles.formControl}>\n      <NativeSelect\n        defaultValue=\"\"\n        onChange={(e) => handleCountryChange(e.target.value)}\n        input={<BootstrapInput />}\n      >\n        <option value=\"\">Monde entier</option>\n        {countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\n      </NativeSelect>\n      <FormHelperText>Lieu</FormHelperText>\n    </FormControl>\n  );\n};\n\nexport default CountryPicker;\n","import React from 'react';\nimport { Cards, Chart, CountryPicker } from './components';\nimport styles from './App.module.css';\nimport { getData } from './api';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {},\n      country: '',\n    };\n  }\n\n  async componentDidMount() {\n    const receivedData = await getData();\n    this.setState({ data: receivedData });\n  }\n\n  handleCountrychange = async (country) => {\n    const receivedData = await getData(country);\n    this.setState({ data: receivedData, country });\n  }\n\n  render() {\n    const { data, country } = this.state;\n    return (\n      <div className={styles.container}>\n        <Cards data={data} />\n        <CountryPicker handleCountryChange={this.handleCountrychange}/>\n        <Chart data={data} country={country}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__yjZZH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"App_body__ZTvxg\",\"container\":\"App_container__1MQN3\"};"],"sourceRoot":""}