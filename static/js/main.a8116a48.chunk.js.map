{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Card.jsx","components/Cards/Cards.jsx","components/Charts/Chart.jsx","components/Header/Header.jsx","api/index.js","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/Charts/Chart.module.css","components/CountryPicker/CountryPicker.module.css","App.module.css"],"names":["module","exports","CardExample","className","cardTitle","value","cardDiscription","lastUpdate","Grid","item","component","Card","xs","md","cx","styles","card","CardContent","Typography","color","gutterBottom","variant","start","end","separator","Date","toLocaleString","Cards","data","confirmed","recovered","deaths","container","spacing","justify","Chart","country","barChart","labels","datasets","label","backgroundColor","options","legend","display","title","text","ElevationScroll","props","children","window","trigger","useScrollTrigger","disableHysteresis","threshold","target","React","cloneElement","elevation","useStyles","makeStyles","rightToolbar","marginLeft","fontSize","ElevateAppBar","classes","AppBar","Toolbar","IconButton","href","url","getData","a","dynamicUrl","axios","get","getCountries","countries","map","name","BootstrapInput","withStyles","theme","root","marginTop","input","borderRadius","position","palette","background","paper","border","padding","transition","transitions","create","fontFamily","join","borderColor","boxShadow","InputBase","CountryPicker","handleCountryChange","useState","setCountries","useEffect","allCountries","receivedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","i","key","FormHelperText","App","state","handleCountrychange","receivedData","setState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a8116a48.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"confirmed\":\"Cards_confirmed__iMMyf\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from 'react';\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\nimport styles from './Cards.module.css';\n\nconst CardExample = ({ className, cardTitle, value, cardDiscription, lastUpdate }) => (\n  <Grid item component={Card} xs={12} md={3} className={cx(styles.card, className)}>\n    <CardContent>\n      <Typography color=\"textSecondary\" gutterBottom>{cardTitle}</Typography>\n      <Typography variant=\"h5\" component=\"h2\">\n        <CountUp\n          start={0}\n          end={value}\n          separator=\" \"\n        />\n      </Typography>\n      <Typography variant=\"body2\" component=\"p\" gutterBottom>{cardDiscription}</Typography>\n      <Typography color=\"textSecondary\">Dernière mise à jour: {new Date(lastUpdate).toLocaleString()}</Typography>\n    </CardContent>\n  </Grid>\n);\n\nexport default CardExample;\n","import React from 'react';\nimport { Grid } from '@material-ui/core';\nimport CardExample from './Card';\nimport styles from './Cards.module.css';\n\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n  if (!confirmed) {\n    return 'Loading...';\n  }\n\n  return (\n    <div className={styles.container}>\n      <Grid container spacing={3} justify=\"center\">\n\n        <CardExample\n          className={styles.confirmed}\n          cardTitle=\"Confirmés\"\n          value={confirmed.value}\n          cardDiscription=\"Nombre de cas confirmé de COVID-19\"\n          lastUpdate={lastUpdate}\n        />\n\n        <CardExample\n          className={styles.recovered}\n          cardTitle=\"Guérisons\"\n          value={recovered.value}\n          cardDiscription=\"Nombre de cas guéri de COVID-19\"\n          lastUpdate={lastUpdate}\n        />\n\n        <CardExample\n          className={styles.deaths}\n          cardTitle=\"Décès\"\n          value={deaths.value}\n          cardDiscription=\"Nombre de décès de COVID-19\"\n          lastUpdate={lastUpdate}\n        />\n\n      </Grid>\n    </div>\n  );\n};\n\nexport default Cards;\n","import React from 'react';\nimport { Bar } from 'react-chartjs-2';\n// import { getDailyData } from '../../api';\nimport styles from './Chart.module.css';\n\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n// temporairement dysfonctionnement api/daily\n// const [dailyData, setDailyData] = useState([]);\n  //\n  // useEffect(() => {\n  //   const receiveDailyData = async () => {\n  //     setDailyData(await getDailyData());\n  //   };\n  //\n  //   receiveDailyData();\n  // }, []);\n\n  // const lineChart = (\n  //   dailyData.length\n  //     ? (\n  //       <Line\n  //         data={{\n  //           labels: dailyData.map(({ date }) => date),\n  //           datasets: [{\n  //             data: dailyData.map(({ confirmed }) => confirmed),\n  //             label: 'Confirmés',\n  //             borderColor: 'rgba(255, 0, 0)',\n  //             fill: true,\n  //           },\n  //           {\n  //             data: dailyData.map(({ deaths }) => deaths),\n  //             label: 'Décès',\n  //             borderColor: 'rgba(87, 68, 50)',\n  //             fill: true,\n  //           }],\n  //         }}\n  //         options={{\n  //           title: { display: true, position: 'bottom', text: 'Le graphique de tous les cas dans le monde' },\n  //         }}\n  //       />\n  //     ) : null\n  // );\n\n  const barChart = (\n    confirmed\n      ? (\n        <Bar\n          data={{\n            labels: ['Infecté', 'Guéri', 'Décès'],\n            datasets: [{\n              data: [confirmed.value, recovered.value, deaths.value],\n              label: 'Hommes',\n              backgroundColor: ['rgba(255, 0, 0, 0.6)', 'rgba(159, 83, 231, 0.6)', 'rgba(87, 68, 50, 0.6)'],\n            }],\n          }}\n          options={{\n            legend: { display: false },\n            title: { display: true, text: `Le graphique de tous les cas de pays: ${country}` },\n          }}\n        />\n      ) : null\n  );\n\n  return (\n    <div className={styles.container}>\n      {barChart}\n    </div>\n  );\n};\n\nexport default Chart;\n","import React from 'react';\nimport { AppBar, Toolbar, Typography, IconButton, useScrollTrigger } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GitHubIcon from '@material-ui/icons/GitHub';\n\nfunction ElevationScroll(props) {\n  const { children, window } = props;\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0,\n    target: window,\n  });\n\n  return React.cloneElement(children, {\n    elevation: trigger ? 4 : 0,\n  });\n}\n\nconst useStyles = makeStyles({\n  rightToolbar: {\n    marginLeft: 'auto',\n  },\n  title: {\n    display: 'flex',\n    fontSize: '1.3rem',\n  },\n});\n\nexport default function ElevateAppBar() {\n  const classes = useStyles();\n  return (\n    <>\n      <ElevationScroll>\n        <AppBar>\n          <Toolbar>\n            <Typography\n              className={classes.title}\n              component=\"h1\"\n              variant=\"h1\"\n            >\n              Covid-19 Statistic\n            </Typography>\n            <IconButton\n              className={classes.rightToolbar}\n              href=\"https://github.com/npankov/covid19-statistic-project\"\n            >\n              <GitHubIcon />\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n      </ElevationScroll>\n      <Toolbar />\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const getData = async (country) => {\n  let dynamicUrl = url;\n  if (country) {\n    dynamicUrl = `${url}/countries/${country}`;\n  }\n  try {\n    const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(dynamicUrl);\n    return { confirmed, recovered, deaths, lastUpdate };\n  } catch (error) {\n    return error;\n  }\n};\n\n// temporairement dysfonctionnement api/daily\n// export const getDailyData = async () => {\n//   try {\n//     const { data } = await axios.get(`${url}/daily`);\n//     const newData = data.map((el) => ({\n//       confirmed: el.confirmed.total,\n//       deaths: el.deaths.total,\n//       date: el.reportDate,\n//     }));\n//     return newData;\n//   } catch (error) {\n//     return error;\n//   }\n// };\n\nexport const getCountries = async () => {\n  try {\n    const { data: { countries } } = await axios.get(`${url}/countries`);\n    return countries.map((country) => country.name);\n  } catch (error) {\n    return error;\n  }\n};\n\n","import React, { useState, useEffect } from 'react';\nimport { FormControl, FormHelperText, NativeSelect, InputBase } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport { getCountries } from '../../api';\nimport styles from './CountryPicker.module.css';\n\nconst BootstrapInput = withStyles((theme) => ({\n  root: {\n    'label + &': {\n      marginTop: theme.spacing(3),\n    },\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    padding: '10px 26px 10px 12px',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n    '&:focus': {\n      borderRadius: 4,\n      borderColor: '#80bdff',\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n    },\n  },\n}))(InputBase);\n\nconst CountryPicker = ({ handleCountryChange }) => {\n  const [countries, setCountries] = useState([]);\n\n  useEffect(() => {\n    const receivedCountries = async () => {\n      const allCountries = await getCountries();\n      setCountries(allCountries);\n    };\n\n    receivedCountries();\n  }, []);\n\n  return (\n    <FormControl className={styles.formControl}>\n      <NativeSelect\n        defaultValue=\"\"\n        onChange={(e) => handleCountryChange(e.target.value)}\n        input={<BootstrapInput />}\n      >\n        <option value=\"\">Monde entier</option>\n        {countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\n      </NativeSelect>\n      <FormHelperText>Lieu</FormHelperText>\n    </FormControl>\n  );\n};\n\nexport default CountryPicker;\n","import React from 'react';\nimport { Cards, Chart, CountryPicker, Header } from './components';\nimport styles from './App.module.css';\nimport { getData } from './api';\n\nclass App extends React.Component {\n    state = {\n      data: {},\n      country: '',\n    };\n\n\n  async componentDidMount() {\n    const receivedData = await getData();\n    this.setState({ data: receivedData });\n  }\n\n  handleCountrychange = async (country) => {\n    const receivedData = await getData(country);\n    this.setState({ data: receivedData, country });\n  }\n\n  render() {\n    const { data, country } = this.state;\n    return (\n      <div className={styles.container}>\n        <Header />\n        <Cards data={data} />\n        <CountryPicker handleCountryChange={this.handleCountrychange}/>\n        <Chart data={data} country={country}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__yjZZH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"App_body__ZTvxg\",\"container\":\"App_container__1MQN3\"};"],"sourceRoot":""}